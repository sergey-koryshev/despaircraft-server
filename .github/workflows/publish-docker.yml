name: Create and publish a DespairCraft Docker image

on:
  workflow_dispatch:
  push:
    branches:
      - release/*
    paths-ignore:
      - '*.md'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: despaircraft-server

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Load versions
        run: |
          echo "VERSIONS=$(jq -c . < versions.json)" >> $GITHUB_ENV

      - name: Determine internal version for Docker Image
        run: |
          image="${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:fabric-${{ fromJson(env.VERSIONS).MinecraftVersion }}-latest"

          # Attempt to pull the Docker image
          if ! docker pull "$image" 2>/dev/null; then
            echo "INTERNAL_VERSION=1" >> $GITHUB_ENV
            exit 0
          fi

          # Get the label value
          label_value=$(docker inspect --format '{{ index .Config.Labels "org.opencontainers.image.internal-version" }}' "$image")

          # Check if label exists and is not empty
          if [ -n "$label_value" ]; then
            echo "INTERNAL_VERSION=$((label_value + 1))" >> $GITHUB_ENV
          else
            echo "INTERNAL_VERSION=1" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            - ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:fabric-${{ fromJson(env.VERSIONS).MinecraftVersion }}-latest
            - ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:fabric-${{ fromJson(env.VERSIONS).MinecraftVersion }}-v${{ env.INTERNAL_VERSION }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.internal-version=${{ env.INTERNAL_VERSION }}
          build-args:
            FABRIC_SERVER_DOWNLOAD_URL=https://meta.fabricmc.net/v2/versions/loader/${{ fromJson(env.VERSIONS).MinecraftVersion }}/${{ fromJson(env.VERSIONS).FabricLoaderVersion }}/${{ fromJson(env.VERSIONS).FabricInstallerVersion }}/server/jar
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: false
